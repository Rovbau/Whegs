from Algoritmus import *

from matplotlib import lines
from mpl_toolkits.mplot3d import axes3d
import matplotlib
matplotlib.use('Agg') #import after matplot
import matplotlib.pyplot as plt #import after "Agg"
from math import sin, cos, radians

obst = Obstacles()

x_polar = []
y_polar = []
z_polar = []



scan_data = [[[0, -45.0, 235], [0, -43.2, 236], [0, -41.4, 236], [0, -39.6, 237], [0, -37.8, 238], [0, -36.0, 239], [0, -34.2, 238], [0, -32.4, 239], [0, -30.6, 240], [0, -28.8, 234], [0, -27.0, 234], [0, -25.2, 236], [0, -23.4, 236], [0, -21.6, 236], [0, -19.8, 236], [0, -18.0, 235], [0, -16.2, 220], [0, -14.4, 126], [0, -12.6, 120], [0, -10.8, 113], [0, -9.0, 113], [0, -7.2, 113], [0, -5.4, 116], [0, -3.6, 116], [0, -1.8, 119], [0, 0.0, 120], [0, 1.8, 122], [0, 3.6, 117], [0, 5.4, 121], [0, 7.2, 121], [0, 9.0, 117], [0, 10.8, 118], [0, 12.6, 124], [0, 14.4, 126], [0, 16.2, 127], [0, 18.0, 128], [0, 19.8, 119], [0, 21.6, 97], [0, 23.4, 96], [0, 25.2, 98], [0, 27.0, 102], [0, 28.8, 142], [0, 30.6, 141], [0, 32.4, 142], [0, 34.2, 144], [0, 36.0, 146], [0, 37.8, 148], [0, 39.6, 152], [0, 41.4, 153], [0, 43.2, 155], [0, 45.0, 156]], [[2.0, -45.0, 225], [2.0, -43.2, 225], [2.0, -41.4, 226], [2.0, -39.6, 227], [2.0, -37.8, 227], [2.0, -36.0, 229], [2.0, -34.2, 230], [2.0, -32.4, 230], [2.0, -30.6, 231], [2.0, -28.8, 232], [2.0, -27.0, 233], [2.0, -25.2, 234], [2.0, -23.4, 235], [2.0, -21.6, 233], [2.0, -19.8, 222], [2.0, -18.0, 166], [2.0, -16.2, 122], [2.0, -14.4, 114], [2.0, -12.6, 112], [2.0, -10.8, 113], [2.0, -9.0, 115], [2.0, -7.2, 116], [2.0, -5.4, 117], [2.0, -3.6, 119], [2.0, -1.8, 120], [2.0, 0.0, 121], [2.0, 1.8, 123], [2.0, 3.6, 123], [2.0, 5.4, 122], [2.0, 7.2, 121], [2.0, 9.0, 124], [2.0, 10.8, 128], [2.0, 12.6, 129], [2.0, 14.4, 125], [2.0, 16.2, 119], [2.0, 18.0, 103], [2.0, 19.8, 95], [2.0, 21.6, 96], [2.0, 23.4, 94], [2.0, 25.2, 110], [2.0, 27.0, 140], [2.0, 28.8, 137], [2.0, 30.6, 138], [2.0, 32.4, 144], [2.0, 34.2, 146], [2.0, 36.0, 146], [2.0, 37.8, 150], [2.0, 39.6, 155], [2.0, 41.4, 154], [2.0, 43.2, 159], [2.0, 45.0, 160]], [[4.0, -45.0, 223], [4.0, -43.2, 223], [4.0, -41.4, 225], [4.0, -39.6, 225], [4.0, -37.8, 226], [4.0, -36.0, 227], [4.0, -34.2, 226], [4.0, -32.4, 228], [4.0, -30.6, 230], [4.0, -28.8, 232], [4.0, -27.0, 232], [4.0, -25.2, 233], [4.0, -23.4, 235], [4.0, -21.6, 235], [4.0, -19.8, 235], [4.0, -18.0, 231], [4.0, -16.2, 204], [4.0, -14.4, 125], [4.0, -12.6, 114], [4.0, -10.8, 112], [4.0, -9.0, 113], [4.0, -7.2, 115], [4.0, -5.4, 116], [4.0, -3.6, 117], [4.0, -1.8, 118], [4.0, 0.0, 118], [4.0, 1.8, 117], [4.0, 3.6, 123], [4.0, 5.4, 123], [4.0, 7.2, 124], [4.0, 9.0, 122], [4.0, 10.8, 122], [4.0, 12.6, 128], [4.0, 14.4, 129], [4.0, 16.2, 131], [4.0, 18.0, 133], [4.0, 19.8, 108], [4.0, 21.6, 100], [4.0, 23.4, 100], [4.0, 25.2, 100], [4.0, 27.0, 110], [4.0, 28.8, 117], [4.0, 30.6, 118], [4.0, 32.4, 126], [4.0, 34.2, 129], [4.0, 36.0, 137], [4.0, 37.8, 148], [4.0, 39.6, 131], [4.0, 41.4, 130], [4.0, 43.2, 131], [4.0, 45.0, 132]], [[6.0, -45.0, 212], [6.0, -43.2, 214], [6.0, -41.4, 212], [6.0, -39.6, 214], [6.0, -37.8, 216], [6.0, -36.0, 218], [6.0, -34.2, 219], [6.0, -32.4, 216], [6.0, -30.6, 218], [6.0, -28.8, 219], [6.0, -27.0, 223], [6.0, -25.2, 223], [6.0, -23.4, 221], [6.0, -21.6, 218], [6.0, -19.8, 203], [6.0, -18.0, 127], [6.0, -16.2, 118], [6.0, -14.4, 114], [6.0, -12.6, 113], [6.0, -10.8, 114], [6.0, -9.0, 116], [6.0, -7.2, 117], [6.0, -5.4, 118], [6.0, -3.6, 121], [6.0, -1.8, 122], [6.0, 0.0, 124], [6.0, 1.8, 124], [6.0, 3.6, 124], [6.0, 5.4, 123], [6.0, 7.2, 122], [6.0, 9.0, 126], [6.0, 10.8, 126], [6.0, 12.6, 126], [6.0, 14.4, 123], [6.0, 16.2, 118], [6.0, 18.0, 102], [6.0, 19.8, 100], [6.0, 21.6, 101], [6.0, 23.4, 101], [6.0, 25.2, 110], [6.0, 27.0, 112], [6.0, 28.8, 113], [6.0, 30.6, 122], [6.0, 32.4, 122], [6.0, 34.2, 128], [6.0, 36.0, 134], [6.0, 37.8, 145], [6.0, 39.6, 132], [6.0, 41.4, 132], [6.0, 43.2, 141], [6.0, 45.0, 161]]]
polar_scan = []

obst.detect_obstacles(scan_data)

for line_scan in scan_data:
    for element in line_scan:

        print(element)
        x = element[2] * sin(radians(element[0] + 90)) * cos(radians(element[1]))
        y = element[2] * sin(radians(element[0] + 90)) * sin(radians(element[1]))
        z = element[2] * cos(radians(element[0] + 90))
        polar_scan.append([int(x),int(y),int(z)])
print(polar_scan)
#for line in scan_data:
 #   print(line)
a, b, c = zip(*polar_scan)
print(a)
print(b)
print(c)
x_polar.extend(a)
y_polar.extend(b)
z_polar.extend(c)

#print(x)

fig = plt.figure()
ax = fig.add_subplot(111, projection = "3d") 
ax.scatter(x_polar, y_polar, z_polar)
#plt.show
#plt.gca().invert_yaxis()
plt.savefig('scan_picture.png')
