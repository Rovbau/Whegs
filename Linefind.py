data = [[-10, -45.0, 251], [-10, -43.2, 252], [-10, -41.4, 249], [-10, -39.6, 248], [-10, -37.8, 253], [-10, -36.0, 263], [-10, -34.2, 259], [-10, -32.4, 274], [-10, -30.6, 269], [-10, -28.8, 202], [-10, -27.0, 204], [-10, -25.2, 202], [-10, -23.4, 204], [-10, -21.6, 208], [-10, -19.8, 207], [-10, -18.0, 209], [-10, -16.2, 210], [-10, -14.4, 213], [-10, -12.6, 214], [-10, -10.8, 216], [-10, -9.0, 219], [-10, -7.2, 219], [-10, -5.4, 223], [-10, -3.6, 227], [-10, -1.8, 232], [-10, 0.0, 231], [-10, 1.8, 235], [-10, 3.6, 234], [-10, 5.4, 238], [-10, 7.2, 241], [-10, 9.0, 244], [-10, 10.8, 250], [-10, 12.6, 279], [-10, 14.4, 277], [-10, 16.2, 264], [-10, 18.0, 260], [-10, 19.8, 357], [-10, 21.6, 347], [-10, 23.4, 355], [-10, 25.2, 347], [-10, 27.0, 348], [-10, 28.8, 356], [-10, 30.6, 354], [-10, 32.4, 353], [-10, 34.2, 341], [-10, 36.0, 341], [-10, 37.8, 341], [-10, 39.6, 347], [-10, 41.4, 349], [-10, 43.2, 354], [-10, 45.0, 337]]

liste = []
def polar_to_kartesian( winkel, dist):
    """returns aus Dist und Winkel Dx,Dy"""
    dx=int((dist*cos(radians(winkel))))
    dy=int((dist*sin(radians(winkel))))
    return(dx,dy)
    

#data = data[0]
print(data)

for dat in data:
    liste.append(dat[2])
print(liste)

for i, element in enumerate(data):
    print(data[i][2] - data[i+1][2])

    